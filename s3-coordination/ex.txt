3. Pressing CTRL+C signals the foreground group with SIGINT.
When using kill -s <SIGNAL> <PID> only the process with PID receives SIGNAL.

4. Mutex is a locking mechanism: the resource stays locked for all tasks except for the one that acquired the lock.
Semaphores are a signal mechanism: processes signal when releasing or taking a resource; only a number of processes can access the resource at a time.

5. This is strict alternation, which relies on busy waiting. Race conditions do not occur here, but both processes may be prohibited from entering the critical region for a while (and they must alternate).

6. If the parent process sends the signal before the child has the chance to call pause(); after pause() is called, no signal will ever be sent.